// Hybrid - A versatile framework for application development.
// Copyright (C) 2024  Fielding Baran
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY- without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

using Hybrid.Numerics;

namespace Sandbox.Galaxy
{
    internal static class BlackBody
    {
        private static readonly Color[] colorTable =
        [
            new(1, -0.00987248f, -0.0166818f, 1),
            new(1, 0.000671682f, -0.0173831f, 1),
            new(1, 0.0113477f, -0.0179839f, 1),
            new(1, 0.0221357f, -0.0184684f, 1),
            new(1, 0.0330177f, -0.0188214f, 1),
            new(1, 0.0439771f, -0.0190283f, 1),
            new(1, 0.0549989f, -0.0190754f, 1),
            new(1, 0.0660696f, -0.0189496f, 1),
            new(1, 0.0771766f, -0.0186391f, 1),
            new(1, 0.0883086f, -0.0181329f, 1),
            new(1, 0.0994553f, -0.017421f, 1),
            new(1, 0.110607f, -0.0164945f, 1),
            new(1, 0.121756f, -0.0153455f, 1),
            new(1, 0.132894f, -0.0139671f, 1),
            new(1, 0.144013f, -0.0123534f, 1),
            new(1, 0.155107f, -0.0104993f, 1),
            new(1, 0.166171f, -0.0084008f, 1),
            new(1, 0.177198f, -0.00605465f, 1),
            new(1, 0.188184f, -0.00345843f, 1),
            new(1, 0.199125f, -0.000610485f, 1),
            new(1, 0.210015f, 0.00249014f, 1),
            new(1, 0.220853f, 0.00584373f, 1),
            new(1, 0.231633f, 0.00944995f, 1),
            new(1, 0.242353f, 0.0133079f, 1),
            new(1, 0.25301f, 0.0174162f, 1),
            new(1, 0.263601f, 0.021773f, 1),
            new(1, 0.274125f, 0.0263759f, 1),
            new(1, 0.284579f, 0.0312223f, 1),
            new(1, 0.294962f, 0.0363091f, 1),
            new(1, 0.305271f, 0.0416328f, 1),
            new(1, 0.315505f, 0.0471899f, 1),
            new(1, 0.325662f, 0.0529765f, 1),
            new(1, 0.335742f, 0.0589884f, 1),
            new(1, 0.345744f, 0.0652213f, 1),
            new(1, 0.355666f, 0.0716707f, 1),
            new(1, 0.365508f, 0.078332f, 1 ),
            new(1, 0.375268f, 0.0852003f, 1),
            new(1, 0.384948f, 0.0922709f, 1),
            new(1, 0.394544f, 0.0995389f, 1),
            new(1, 0.404059f, 0.106999f, 1),
            new(1, 0.41349f, 0.114646f, 1),
            new(1, 0.422838f, 0.122476f, 1),
            new(1, 0.432103f, 0.130482f, 1),
            new(1, 0.441284f, 0.138661f, 1),
            new(1, 0.450381f, 0.147005f, 1),
            new(1, 0.459395f, 0.155512f, 1),
            new(1, 0.468325f, 0.164175f, 1),
            new(1, 0.477172f, 0.172989f, 1),
            new(1, 0.485935f, 0.181949f, 1),
            new(1, 0.494614f, 0.19105f, 1),
            new(1, 0.503211f, 0.200288f, 1),
            new(1, 0.511724f, 0.209657f, 1),
            new(1, 0.520155f, 0.219152f, 1),
            new(1, 0.528504f, 0.228769f, 1),
            new(1, 0.536771f, 0.238502f, 1),
            new(1, 0.544955f, 0.248347f, 1),
            new(1, 0.553059f, 0.2583f, 1),
            new(1, 0.561082f, 0.268356f, 1),
            new(1, 0.569024f, 0.27851f, 1),
            new(1, 0.576886f, 0.288758f, 1),
            new(1, 0.584668f, 0.299095f, 1),
            new(1, 0.592372f, 0.309518f, 1),
            new(1, 0.599996f, 0.320022f, 1),
            new(1, 0.607543f, 0.330603f, 1),
            new(1, 0.615012f, 0.341257f, 1),
            new(1, 0.622403f, 0.35198f, 1),
            new(1, 0.629719f, 0.362768f, 1),
            new(1, 0.636958f, 0.373617f, 1),
            new(1, 0.644122f, 0.384524f, 1),
            new(1, 0.65121f, 0.395486f, 1),
            new(1, 0.658225f, 0.406497f, 1),
            new(1, 0.665166f, 0.417556f, 1),
            new(1, 0.672034f, 0.428659f, 1),
            new(1, 0.678829f, 0.439802f, 1),
            new(1, 0.685552f, 0.450982f, 1),
            new(1, 0.692204f, 0.462196f, 1),
            new(1, 0.698786f, 0.473441f, 1),
            new(1, 0.705297f, 0.484714f, 1),
            new(1, 0.711739f, 0.496013f, 1),
            new(1, 0.718112f, 0.507333f, 1),
            new(1, 0.724417f, 0.518673f, 1),
            new(1, 0.730654f, 0.53003f, 1),
            new(1, 0.736825f, 0.541402f, 1),
            new(1, 0.742929f, 0.552785f, 1),
            new(1, 0.748968f, 0.564177f, 1),
            new(1, 0.754942f, 0.575576f, 1),
            new(1, 0.760851f, 0.586979f, 1),
            new(1, 0.766696f, 0.598385f, 1),
            new(1, 0.772479f, 0.609791f, 1),
            new(1, 0.778199f, 0.621195f, 1),
            new(1, 0.783858f, 0.632595f, 1),
            new(1, 0.789455f, 0.643989f, 1),
            new(1, 0.794991f, 0.655375f, 1),
            new(1, 0.800468f, 0.666751f, 1),
            new(1, 0.805886f, 0.678116f, 1),
            new(1, 0.811245f, 0.689467f, 1),
            new(1, 0.816546f, 0.700803f, 1),
            new(1, 0.82179f, 0.712122f, 1),
            new(1, 0.826976f, 0.723423f, 1),
            new(1, 0.832107f, 0.734704f, 1),
            new(1, 0.837183f, 0.745964f, 1),
            new(1, 0.842203f, 0.757201f, 1),
            new(1, 0.847169f, 0.768414f, 1),
            new(1, 0.852082f, 0.779601f, 1),
            new(1, 0.856941f, 0.790762f, 1),
            new(1, 0.861748f, 0.801895f, 1),
            new(1, 0.866503f, 0.812999f, 1),
            new(1, 0.871207f, 0.824073f, 1),
            new(1, 0.87586f, 0.835115f, 1),
            new(1, 0.880463f, 0.846125f, 1),
            new(1, 0.885017f, 0.857102f, 1),
            new(1, 0.889521f, 0.868044f, 1),
            new(1, 0.893977f, 0.878951f, 1),
            new(1, 0.898386f, 0.889822f, 1),
            new(1, 0.902747f, 0.900657f, 1),
            new(1, 0.907061f, 0.911453f, 1),
            new(1, 0.91133f, 0.922211f, 1),
            new(1, 0.915552f, 0.932929f, 1),
            new(1, 0.91973f, 0.943608f, 1),
            new(1, 0.923863f, 0.954246f, 1),
            new(1, 0.927952f, 0.964842f, 1),
            new(1, 0.931998f, 0.975397f, 1),
            new(1, 0.936001f, 0.985909f, 1),
            new(1, 0.939961f, 0.996379f, 1),
            new(0.993241f, 0.9375f, 1, 1),
            new(0.983104f, 0.931743f, 1, 1),
            new(0.973213f, 0.926103f, 1, 1),
            new(0.963562f, 0.920576f, 1, 1),
            new(0.954141f, 0.915159f, 1, 1),
            new(0.944943f, 0.909849f, 1, 1),
            new(0.935961f, 0.904643f, 1, 1),
            new(0.927189f, 0.899538f, 1, 1),
            new(0.918618f, 0.894531f, 1, 1),
            new(0.910244f, 0.88962f, 1, 1),
            new(0.902059f, 0.884801f, 1, 1),
            new(0.894058f, 0.880074f, 1, 1),
            new(0.886236f, 0.875434f, 1, 1),
            new(0.878586f, 0.87088f, 1, 1),
            new(0.871103f, 0.86641f, 1, 1),
            new(0.863783f, 0.862021f, 1, 1),
            new(0.856621f, 0.857712f, 1, 1),
            new(0.849611f, 0.853479f, 1, 1),
            new(0.84275f, 0.849322f, 1, 1),
            new(0.836033f, 0.845239f, 1, 1),
            new(0.829456f, 0.841227f, 1, 1),
            new(0.823014f, 0.837285f, 1, 1),
            new(0.816705f, 0.83341f, 1, 1),
            new(0.810524f, 0.829602f, 1, 1),
            new(0.804468f, 0.825859f, 1, 1),
            new(0.798532f, 0.82218f, 1, 1),
            new(0.792715f, 0.818562f, 1, 1),
            new(0.787012f, 0.815004f, 1, 1),
            new(0.781421f, 0.811505f, 1, 1),
            new(0.775939f, 0.808063f, 1, 1),
            new(0.770561f, 0.804678f, 1, 1),
            new(0.765287f, 0.801348f, 1, 1),
            new(0.760112f, 0.798071f, 1, 1),
            new(0.755035f, 0.794846f, 1, 1),
            new(0.750053f, 0.791672f, 1, 1),
            new(0.745164f, 0.788549f, 1, 1),
            new(0.740364f, 0.785474f, 1, 1),
            new(0.735652f, 0.782448f, 1, 1),
            new(0.731026f, 0.779468f, 1, 1),
            new(0.726482f, 0.776534f, 1, 1),
            new(0.722021f, 0.773644f, 1, 1),
            new(0.717638f, 0.770798f, 1, 1),
            new(0.713333f, 0.767996f, 1, 1),
            new(0.709103f, 0.765235f, 1, 1),
            new(0.704947f, 0.762515f, 1, 1),
            new(0.700862f, 0.759835f, 1, 1),
            new(0.696848f, 0.757195f, 1, 1),
            new(0.692902f, 0.754593f, 1, 1),
            new(0.689023f, 0.752029f, 1, 1),
            new(0.685208f, 0.749502f, 1, 1),
            new(0.681458f, 0.747011f, 1, 1),
            new(0.67777f, 0.744555f, 1, 1),
            new(0.674143f, 0.742134f, 1, 1),
            new(0.670574f, 0.739747f, 1, 1),
            new(0.667064f, 0.737394f, 1, 1),
            new(0.663611f, 0.735073f, 1, 1),
            new(0.660213f, 0.732785f, 1, 1),
            new(0.656869f, 0.730528f, 1, 1),
            new(0.653579f, 0.728301f, 1, 1),
            new(0.65034f, 0.726105f, 1, 1),
            new(0.647151f, 0.723939f, 1, 1),
            new(0.644013f, 0.721801f, 1, 1),
            new(0.640922f, 0.719692f, 1, 1),
            new(0.637879f, 0.717611f, 1, 1),
            new(0.634883f, 0.715558f, 1, 1),
            new(0.631932f, 0.713531f, 1, 1),
            new(0.629025f, 0.711531f, 1, 1),
            new(0.626162f, 0.709557f, 1, 1),
            new(0.623342f, 0.707609f, 1, 1),
            new(0.620563f, 0.705685f, 1, 1),
            new(0.617825f, 0.703786f, 1, 1),
            new(0.615127f, 0.701911f, 1, 1),
            new(0.612469f, 0.70006f, 1, 1),
            new(0.609848f, 0.698231f, 1, 1),
            new(0.607266f, 0.696426f, 1, 1),
            new(0.60472f, 0.694643f, 1, 1),
        ];

        public static Color FromTemperature(float temp)
        {
            const double MinTemp = 1000;
            const double MaxTemp = 10000;
            const int colNum = 200;

            var i = (int)((temp - MinTemp) / (MaxTemp - MinTemp) * colNum);

            i = Math.Min(colNum - 1, i);
            i = Math.Max(0, i);

            return colorTable[i];
        }
    }
}
